<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Custom Integrations on Unofficial vRealize Automation How-To Docs</title><link>https://unofficial-vra-docs.github.io/code-stream/custom-integrations/</link><description>Recent content in Custom Integrations on Unofficial vRealize Automation How-To Docs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://unofficial-vra-docs.github.io/code-stream/custom-integrations/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Auth</title><link>https://unofficial-vra-docs.github.io/code-stream/custom-integrations/basicauth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://unofficial-vra-docs.github.io/code-stream/custom-integrations/basicauth/</guid><description>To generate a basic authentication header from a username and password in Code Stream you could use a CI task and execute echo -n username:password | base64, then export the result for use later on. A more repeatable way is to create a Custom Integration that takes the two inputs, and returns the encoded header as an output.
Using the shell runtime:
---runtime:shellcode:| export basicAuthHeader=$(echo -n $username:$password | base64)inputProperties:# Username input- name:&amp;#39;username&amp;#39;type:texttitle:&amp;#39;Username&amp;#39;placeHolder:&amp;#39;Enter basic authentication usename&amp;#39;required:truebindable:true# Password input- name:&amp;#39;password&amp;#39;type:passwordtitle:&amp;#39;Password&amp;#39;placeHolder:&amp;#39;Enter basic authentication password&amp;#39;defaultValue:&amp;#39;&amp;#39;required:truebindable:trueoutputProperties:- name:basicAuthHeadertype:labeltitle:BasicAuthenticationHeaderUsing the Python3 runtime:</description></item><item><title>Sleep</title><link>https://unofficial-vra-docs.github.io/code-stream/custom-integrations/sleep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://unofficial-vra-docs.github.io/code-stream/custom-integrations/sleep/</guid><description>Sleeps for a custom number of seconds set by sleepTime:
---runtime:shellcode:| sleep $sleepTimeinputProperties:- name:&amp;#39;sleepTime&amp;#39;type:numbertitle:&amp;#39;Sleep Time (s)&amp;#39;placeHolder:&amp;#39;Number input&amp;#39;minimum:1maximum:600defaultValue:30</description></item></channel></rss>