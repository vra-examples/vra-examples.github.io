<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Extensibility on vRealize Automation Exampes</title><link>https://vra-examples.github.io/cloud-assembly/extensibility/</link><description>Recent content in Extensibility on vRealize Automation Exampes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vra-examples.github.io/cloud-assembly/extensibility/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom VM Name</title><link>https://vra-examples.github.io/cloud-assembly/extensibility/rename-vm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vra-examples.github.io/cloud-assembly/extensibility/rename-vm/</guid><description>This action will rename your VM to the value specified inthe custom property userDefinedName - it need to be called at the Compute allocation stage as a blocking task.
Python:
def handler(context, inputs): old_name = inputs[&amp;#34;resourceNames&amp;#34;][0] new_name = inputs[&amp;#34;customProperties&amp;#34;][&amp;#34;userDefinedName&amp;#34;] outputs = {} outputs[&amp;#34;resourceNames&amp;#34;] = inputs[&amp;#34;resourceNames&amp;#34;] outputs[&amp;#34;resourceNames&amp;#34;][0] = new_name print(&amp;#34;Setting machine name from {0} to {1}&amp;#34;.format(old_name, new_name)) return outputs PowerShell:
function handler($context, $payload) { $oldVMName = $payload.resourceNames[0] $newVMName = $payload.customProperties.userDefinedName $returnObj = [PSCustomObject]@{ resourceNames = $payload.</description></item></channel></rss>